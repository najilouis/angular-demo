
// @function sqrt($r) {
//     $x0: 1;
//     $x1: $x0;
   
//     @for $i from 1 through 10 {
//       $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
//       $x0: $x1;
//     }
   
//     @return $x1;
// }

@function pi() {
    @return 3.14159265359;
}
@function fact($number) {
    $value: 1;
    @if $number > 0 {
      @for $i from 1 through $number {
        $value: $value * $i;
      }
    }
    @return $value;
}
@function pow($number, $exp) {
    $value: 1;
    @if $exp > 0 {
      @for $i from 1 through $exp {
        $value: $value * $number;
      }
    }
    @else if $exp < 0 {
      @for $i from 1 through -$exp {
        $value: $value / $number;
      }
    }
    @return $value;
}
  
@function rad($angle) {
    $unit: unit($angle);
    $unitless: $angle / ($angle * 0 + 1);
    // If the angle has 'deg' as unit, convert to radians.
    @if $unit == deg {
      $unitless: $unitless / 180 * pi();
    }
    @return $unitless;
}
  
@function sin($angle) {
    $sin: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
      $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
    }
    @return $sin;
}
  
@function cos($angle) {
    $cos: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
      $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
    }
    @return $cos;
}
  
@function tan($angle) {
    @return sin($angle) / cos($angle);
}

@mixin on-circle($item-count, $item-size) {
    position: relative;
    padding: 0;
    list-style: none;       
    
    > * {
        display: block;
        position: absolute;
        top:  50%; 
        left: 50%;
        width:  $item-size;
        height: $item-size;
        margin: -($item-size / 2);
        background: red;
        border-radius: 50%;
        text-align: center;
        line-height: 2em;
    
        // $angle: (180 / ($item-count/2));
        $angle: 360 / $item-count;
        $rot: 0;
        $rottest: 0;
        $x: 0;
        $midW: 40;
        $midH: 17;
    
        @for $i from 1 through $item-count {
        &:nth-of-type(#{$i}) {
            // @if($i <= ($item-count/2)){
            //     // $rot: $rot + $angle;
            //     $t1: ($i - 1)
            //     transform: translate3D(0vw, -25vw, 0);
            //     transform: translate3D(-50vw, 0vw, 0);
                $x: $midW * cos(($angle * $i) * (pi()/180));
                $y: $midH * sin(($angle * $i) * (pi()/180));
                transform: translate3D($x * 1vw, $y * 1vw, 0);
            // }
            // @else{
            //     $rot: $rot + $angle;
            //     transform: 
            //     rotate($rot * 1deg)
            //     translate(50vw - ($i*2))
            //     rotate($rot * -1deg);
            // }
        }
    
        // $rot: $rot + $angle;
        }
    }
}
section{
    margin: 0 auto;
    max-width: 80vw;
    ul.table{
        @include on-circle($item-count: 34, $item-size: 2em);
        width: inherit;
        height: 34vw;
        border: 1px solid;
        border-radius: 50%;
        padding: 0;
    }
}